@model WebAppProject.Models.Products

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_LayoutForAdmin.cshtml";
}

<h2>ویرایش</h2>


@using (Html.BeginForm("Edit", "Products", FormMethod.Post, new { @id = "login", enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Products</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ProductsId)

        <div class="form-group">
            <div class="col-md-10">
                @Html.DropDownList("CategoryId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.CategoryId, "", new { @class = "text-danger" })
            </div>
            @Html.LabelFor(model => model.CategoryId, "CategoryId", htmlAttributes: new { @class = "control-label col-md-2" })
            
        </div>

        <div class="form-group">
            <div class="col-md-10">
                @Html.EditorFor(model => model.ProductName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ProductName, "", new { @class = "text-danger" })
            </div>
            @Html.LabelFor(model => model.ProductName, htmlAttributes: new { @class = "control-label col-md-2" })
            
        </div>

        <div class="form-group">
            <div class="col-md-10">
                @Html.EditorFor(model => model.UnitsInStock, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.UnitsInStock, "", new { @class = "text-danger" })
            </div>
            @Html.LabelFor(model => model.UnitsInStock, htmlAttributes: new { @class = "control-label col-md-2" })
            
        </div>

        <div class="form-group">
            <div class="col-md-10">
                @Html.EditorFor(model => model.UnitPrice, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.UnitPrice, "", new { @class = "text-danger" })
            </div>
            @Html.LabelFor(model => model.UnitPrice, htmlAttributes: new { @class = "control-label col-md-2" })
            
        </div>
        <div class="form-group">
            <div class="col-md-10">
                <textarea name="describ" class ="form-control"></textarea>
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })

        </div>
        <div class="form-group">
            
            <div class="col-md-10">
                <input type="file" name="file" accept="image/*" class="form-control-file" id="exampleFormControlFile1" />
                <p style="color:red;">Note : Only .JPG File Accept</p>
                <div class="main-image">
                    @if (Model.Image != null)
                    {
                        var base64 = Convert.ToBase64String(Model.Image);
                        var imgsrc = string.Format("data:image/jpg;base64,{0}", base64);
                        <img src="@imgsrc" title="@Html.DisplayFor(model => model.ProductName)" style="height: 250px;">
                    }
                    else
                    {
                        <img src="" style="height: 250px;">
                    }
                </div>
                <br />
            </div>
            <label class="control-label col-md-2">Image</label>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="بروزرسانی" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("بازگشت به لیست", "ProductList")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
